@model OrderStateViewModel


@{
    ViewData["Title"] = "Order Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />

<h2>Order Details</h2>



<br />
<table class="centralised tableCellRightBorder ordersTable">
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.OrderNumber)</td>
        <td>@Html.DisplayFor(model => model.OrderDetails.OrderNumber)</td>
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.Customer)</td>
        <td>@Html.DisplayFor(model => model.OrderDetails.Customer)</td>
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.EntityType)</td>
        <td>@Html.DisplayFor(model => model.OrderDetails.EntityType)</td>
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.EntityCount)</td>
        <td>@Html.DisplayFor(model => model.OrderDetails.EntityCount)</td>
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.Status)</td>
        <td>@Html.DisplayFor(model => model.OrderDetails.Status)</td>
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.CreatedAt)</td>
        <td>@Model.OrderDetails.CreatedAt.ToString("dd/MM/yy  (HH:mm)")</td>
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.DeadLineDate)</td>
        <td>@Model.OrderDetails.DeadLineDate.ToString("dd/MM/yy  (HH:mm)")</td>
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.StartedAt)</td>
        @if (Model.OrderDetails.StartedAt == DateTime.MinValue)
        {
            <td>N/a</td>
        }
        else
        {
            <td>@Model.OrderDetails.StartedAt.ToString("dd/MM/yy (HH:mm)")</td>
        }
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.FinshedAt)</td>
        @if (Model.OrderDetails.FinshedAt == DateTime.MinValue)
        {
            <td>N/a</td>
        }
        else
        {
            <td>@Model.OrderDetails.FinshedAt.ToString("dd/MM/yy (HH:mm)")</td>
        }
    </tr>
    <tr>
        <td class="bold">@Html.DisplayNameFor(model => model.OrderDetails.EntitiesNotProcessed)</td>
        <td> @Html.DisplayFor(model => model.OrderDetails.EntitiesNotProcessed)</td>
    </tr>
</table>
<br />
@if (User.IsInRole("Orders"))
{
    <div class="text-align-center">
        <a asp-action="Edit" class="btn btn-primary centralised" asp-route-id="@Model.OrderDetails.OrderId">Edit Order Details</a> <br />
    </div>
}
<hr />
<h2>Department Line</h2>
<br />

<table class="ordersTable centralised">
    <tr>
        <th>
            @Model.OrderDetails.EntityType ready for processing:
        </th>
        <td>@Model.OrderDetails.EntitiesNotProcessed</td>
        <td></td>
        @if (User.IsInRole("Orders"))
        {
            <td></td>
            <td></td>
        }
        @if (Model.AllowedPositions.Count() > 0 && Model.AllowedPositions.Contains(0) && Model.OrderDetails.EntitiesNotProcessed > 0)
        {
            <form asp-action="FirstPickUp">
                <td>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <input name="OrderId" type="text" style="display: none;" value="@Model.OrderDetails.OrderId" />
                </td>

                <td>
                    <input id="EntitiesPassedInput" asp-for="EntitiesPassed" class="form-control pickUpInputBox inline-block" />
                    <input class="inline-block btn btn-primary" id="firstPickUpButton" type="submit" value="Pick Up" />
                    <span asp-validation-for="EntitiesPassed" class="text-danger"></span>
                </td>
            </form>
        }
    </tr>
    <tr>
        <th>Department</th>
        @if (User.IsInRole("Orders"))
        {
            <th>Started at</th>
            <th>Finished at</th>
        }
        <th>Status</th>
        <th>Processing</th>
        <th>Finished</th>
    </tr>
    @foreach (DepartmentState ls in Model.OrderDetails.DepartmentStates)
    {
        <tr>
            <td>@ls.Name</td>

            @if (User.IsInRole("Orders"))
            {
                <td id="StartTime_@ls.DepartmentStateId">
                    @if (ls.Start == DateTime.MinValue)
                    {
                        <p>N/a</p>
                    }
                    else
                    {
                        @ls.Start.ToString("dd/MM/yy (HH:mm)")
                    }
                </td>
                <td>
                    @if (ls.Finish == DateTime.MinValue)
                    {
                        <p>N/a</p>
                    }
                    else
                    {
                        @ls.Finish.ToString("dd/MM/yy (HH:mm)")
                    }
                </td>
            }
            <td id="Status_@ls.DepartmentStateId">@ls.Status</td>
            <td id="InProgress_@ls.DepartmentStateId" class="InProgress">@ls.EntitiesInProgress</td>
            <td id="RFC_@ls.DepartmentStateId" class="RFC">@ls.EntitiesRFC</td>
            @if (Model.AllowedPositions.Count() > 0 && Model.AllowedPositions.Contains(ls.LocationPosition) && ls.EntitiesRFC > 0)
            {
                <td>
                    <div class="form-firstPickUp">
                        <input class="form-control pickUpInputBox" min="1" max="@ls.EntitiesRFC" id="entityCount_@ls.DepartmentStateId" type="number" size="5" />
                    </div>
                    <div class="form-firstPickUp">
                        <input class="btn btn-primary" type="button" value="Pick Up" onclick="pickUp('@ls.DepartmentStateId', '@ls.Name')" />
                    </div>
                </td>
            }
        </tr>
    }
</table>
<br />
<hr />
<h3>Related Files</h3>
<br />

@if (Model.FileNamesUrls != null)
{
    <table class="centralised">
        @foreach (KeyValuePair<string, string> entry in Model.FileNamesUrls)
        {
            <tr>
                <td>@entry.Key</td>
                <td>
                    <a href="~/FileManager/Download?orderId=@Model.OrderDetails.OrderId&fileName=@entry.Key">Download</a>
                </td>
                <td>
                    <a href=@Url.Content(entry.Value) target="_blank">Open</a><br />
                </td>
                @if (User.IsInRole("Orders"))
                {

                    <td>
                        <a href="~/FileManager/Delete?orderId=@Model.OrderDetails.OrderId&fileName=@entry.Key">Delete</a><br />
                    </td>
                }
            </tr>
        }

    </table>
}
else
{
    <div class="text-align-center">
        <p>No files uploaded</p>
    </div>
}
<hr />
@if (User.IsInRole("Orders"))
{
    <h3>Upload new files</h3>
    <br />
    <div class="text-align-center">
        <form asp-action="UploadFile" asp-controller="FileManager" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <input type="hidden" asp-for="@Model.OrderDetails.OrderId" />
                <label class="control-label">Add file</label><br />
                @*<img src="@ViewBag.ImgPath" height="100" width="100" /><br />*@
                @*@if (!string.IsNullOrEmpty(ViewBag.FileName))
                    {
                        <a href="~/Orders/Download?img=@ViewBag.FileName&userId=@Model.OrderId">Download</a><br />
                    }*@
                <input class="btn btn-default centralised" type="file" name="order_file" id="order_file" />

            </div>
            <div class="form-group">
                <input type="submit" value="Upload" class="btn btn-primary" />
            </div>
        </form>
    </div>

}

<script>

    function pickUp(sourceDepartmentStateId, DepartmentStateName) {
        var DepartmentStateEntitiesRFC = $("td#RFC_" + sourceDepartmentStateId).text().match(/\d+/);

        var EntitiesPassed = $("input#entityCount_" + sourceDepartmentStateId).val();
        if (EntitiesPassed === "" || EntitiesPassed < 1) {
            alert("Please select valid number!");
            return false;
        }

        var entitiesRFC = parseInt(DepartmentStateEntitiesRFC[0])
        if (parseInt(EntitiesPassed) > entitiesRFC) {
            alert("The maximum amount of entities you can pick up is " + DepartmentStateEntitiesRFC);
            return false;
        }

        var confirmation = confirm("Are you sure you want to move " + EntitiesPassed + " entities from " + DepartmentStateName + " to the next department in the line.");
        if (confirmation === false) {
            return false;
        }

        var model = "DepartmentStateId=" + sourceDepartmentStateId + "&EntitiesPassed=" + EntitiesPassed;
        $.ajax({
            type: "POST",
            url: RootUrl + "order/PassEntities",
            data: model,
            success: function (resultModel) {
                $("input#entityCount_" + sourceDepartmentStateId).val("");
                $("td#RFC_" + sourceDepartmentStateId).html(resultModel.sourceEntitiesRFC);
                $("td#InProgress_" + resultModel.targetDepartmentStateId).html(resultModel.targetEntitiesInProgress);
                $("td#Status_" + resultModel.targetDepartmentStateId).html(resultModel.targetDepartmentStateStatus);
                $("td#StartTime_" + resultModel.targetDepartmentStateId).html(resultModel.startTime);
            }
        });
    }

</script>




