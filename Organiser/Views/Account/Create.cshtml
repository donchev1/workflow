@model UsersCreateUpdateViewModel

@{
    ViewData["Title"] = "Create User";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<br /><br />


<h2>Create User</h2>
<hr />
<div class="text-align-center">
    <form asp-action="Create">

        <div asp-validation-summary="ModelOnly" class="text-danger centralised"></div>
        <div class="form-group">
            <label asp-for="UserEntity.UserName" class="control-label centralised"></label>
            <input asp-for="UserEntity.UserName" class="form-control centralised" />
            <span asp-validation-for="UserEntity.UserName" class="text-danger centralised"></span>
        </div>
        <div class="form-group">
            <label asp-for="UserEntity.Password" class="control-label centralised"></label>
            <input type="password" asp-for="UserEntity.Password" class="form-control centralised" />
            <span asp-validation-for="UserEntity.Password" class="text-danger centralised"></span>
        </div>
        <div class="form-group">
            <label asp-for="UserEntity.ConfirmPassword" class="control-label centralised"></label>
            <input type="password"  asp-for="UserEntity.ConfirmPassword" class="form-control centralised" />
            <span asp-validation-for="UserEntity.ConfirmPassword" class="text-danger centralised"></span>
        </div>
        <div class="form-group">
            <div class="checkbox">
                <label>
                    <input asp-for="UserEntity.IsAdmin" /> @Html.DisplayNameFor(model => model.UserEntity.IsAdmin)
                </label>
            </div>
        </div>
        <h4>Roles</h4><br />
        @for (int i = 0; i < Model.Roles.Count; i++)
        {
            @Html.DropDownListFor(x => x.Roles[i], new SelectList(Model.RoleDropDown, "Value", "Text"), new { @class = "form-control centralised" })
        }

        <br />
        <div class="form-group text-align-center">
            <input type="submit" value="Create" class="btn btn-primary" />
        </div>

    </form>
</div>

